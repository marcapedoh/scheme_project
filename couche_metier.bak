#lang scheme


(define last ;cette fonction retourne le dernier élément de la liste s'il existe sinon on retourne la liste vide
  (lambda (lst)
    (if (null? (cdr lst))
        (car lst)
        (last (cdr lst))
     )
   )
)

(define operateur (lambda(exp) ;cette fonction retournera un symbole arthmétique s'il y a lieu dans l'expression que ce soit en préfixé ou infixé
                    (cond
                      ((symbol? (car exp)) (car exp))
                      ((symbol? (cadr exp)) (cadr exp))
                      (else (last exp))
                     )
                   )
)

(define operande1(lambda(exp) ;cette fonction retourne le premier opérateur de l'expression
                   (cond
                     ((number? (car exp)) (car exp))
                     ((number? (cadr exp)) (cadr exp))
                    )
                 )
)

(define operande2(lambda(exp); cette fonction retour le deuxieme opérateur de l'équation
                   (cond
                     ((number? (caddr exp)) (caddr exp))
                     ((number? (cadr exp)) (cadr exp))
                    )
                  )
 )

(define constante?(lambda (exp) ;cette fonction retourne un etat booléen si l'expression fourni en parametre est une constante ou pas
                    (number? exp)
                   )
)

(define indentificateur? (lambda (exp) ; cette fonction return un booléen si l'expression en parametre est un symbole ou pas
                          (symbol? exp)
                          )
)

(define surparenthese? (lambda (exp); cette fonction retourne une expression qui a été surparentheser
                         (= (length exp) 1)
                        )
 
)
(define constructeur (lambda (exp1 operateur exp2); cette fonction permet de creer une expression
                       (list exp1 operateur exp2)
                      )
)

;(operateur '(+ 1 6))
;(operateur '(3 / 2))
;(operateur '(5 9 *))
;(operande1 '(+ 1 6))
;(operande1 '(3 / 2))
;(operande1 '(5 9 *))
;(operande2 '(+ 1 6))
;(operande2 '(3 / 2))
;(operande2 '(5 9 *))